name: NEST CI Deploy

on:
    pull_request:
      types: [opened, synchronize, reopened]
      branches:
        - main
    workflow_dispatch:
    push:
      branches:
        - main

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Repository Checkout
              uses: actions/checkout@v4
            
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
                  cache: 'npm'

            - name: Install Dependencies
              run: npm ci

            - name: Run Build
              run: npm run build

    lint: 
        runs-on:  ubuntu-latest
        steps:
            - name: Repository Checkout
              uses: actions/checkout@v4
            
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
                  cache: 'npm'

            - name: Install Dependencies
              run: npm ci


            - name: Run Build
              run: npm run lint
    
    test:
        env: 
          DATABASE_URL: "mysql://test_user:1234@mysql:3306/test"
        runs-on: ubuntu-latest
        services:
          mysql:
            image: mysql:8.0
            env:
              MYSQL_ROOT_PASSWORD: 1234
              MYSQL_DATABASE: test
              MYSQL_USER: test_user
              MYSQL_PASSWORD: 1234
            ports:
              - 3306:3306
            options: >-
              --health-cmd="mysqladmin ping --silent"
              --health-interval=10s
              --health-timeout=5s
              --health-retries=3
        needs: 
          - build
          - lint
        steps:
            - name: Repository Checkout
              uses: actions/checkout@v4
            
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
                  cache: 'npm'

            - name: Install Dependencies
              run: npm ci

            - name: Prisma Generate
              run: npx prisma generate

            - name: Run Migrations
              run: npm run db:migrate

            - name: Run Tests
              run: npm test

            - name: Run Test Coverage
              run: npm run test:cov

            - name: Upload Test Coverage
              uses: actions/upload-artifact@v4
              with:
                  name: report-test-coverage
                  path: ./coverage