name: NEST CI Deploy

on:
    pull_request:
      types: [opened, synchronize, reopened]
      branches:
        - release/*
    workflow_dispatch:
    push:
      branches:
        - release/*

concurrency:
  group: ${{github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Repository Checkout
              uses: actions/checkout@v4
            
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
                  cache: 'npm'

            - name: Install Dependencies
              run: npm ci

            - name: Run Build
              run: npm run build

    lint: 
        runs-on:  ubuntu-latest
        steps:
            - name: Repository Checkout
              uses: actions/checkout@v4
            
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
                  cache: 'npm'

            - name: Install Dependencies
              run: npm ci


            - name: Run Build
              run: npm run lint
    
    test:
        env: 
          DATABASE_URL: "mysql://${{ secrets.MYSQL_USER }}:${{ secrets.MYSQL_PASSWORD }}@localhost:3306/test"
        runs-on: ubuntu-latest
        services:
          mysql:
            image: mysql:8.0
            env:
              MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
              MYSQL_DATABASE: test
              MYSQL_USER: ${{ secrets.MYSQL_USER }}
              MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
            ports:
              - 3306:3306
            options: >-
              --health-cmd="mysqladmin ping --silent"
              --health-interval=10s
              --health-timeout=5s
              --health-retries=3
        needs: 
          - build
          - lint
        steps:
            - name: Repository Checkout
              uses: actions/checkout@v4
            
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
                  cache: 'npm'

            - name: Install Dependencies
              run: npm ci

            - name: Prisma Generate
              run: npx prisma generate

            - name: Run Migrations
              run: npm run db:migrate

            - name: Run Tests
              run: npm test

            - name: Run Test Coverage
              run: npm run test:cov

            - name: Upload Test Coverage
              uses: actions/upload-artifact@v4
              with:
                  name: report-test-coverage
                  path: ./coverage

    docker-build: 
        runs-on: ubuntu-latest
        needs:
          - test
          - build
          - lint
        steps: 
          - name: Repository Checkout
            uses: actions/checkout@v4
          
          - name: Set up QEMU
            uses: docker/setup-qemu-action@v3
          
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3

          - name: Build Docker Image
            run: docker build --platform linux/amd64 -t nest-devops:latest . --load

          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}

          - name: Push Docker image to Docker Hub
            run: |
                docker tag nest-devops ${{ secrets.DOCKERHUB_USERNAME }}/nest-devops:latest
                docker push ${{ secrets.DOCKERHUB_USERNAME }}/nest-devops:latest