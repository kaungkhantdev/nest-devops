name: NEST CI Common Jobs

on:
    workflow_call:
      secrets:
        mysql_user: 
          required: true
        mysql_password: 
          required: true

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Repository Checkout
              uses: actions/checkout@v4
            
            - name: Set up Node.js
              id: node-setup
              uses: ./github/actions/node-setup-action
              with:
                  node-version: '22'

            - name: Run Build
              run: npm run build

    lint: 
        runs-on:  ubuntu-latest
        steps:
            - name: Repository Checkout
              uses: actions/checkout@v4
            
            - name: Set up Node.js
              id: node-setup
              uses: ./github/actions/node-setup-action
              with:
                  node-version: '22'

            - name: Run Build
              run: npm run lint
    
    test:
        env: 
          DATABASE_URL: "mysql://${{ secrets.mysql_user }}:${{ secrets.mysql_password }}@localhost:3306/test"
        runs-on: ubuntu-latest
        services:
          mysql:
            image: mysql:8.0
            env:
              MYSQL_ROOT_PASSWORD: ${{ secrets.mysql_password }}
              MYSQL_DATABASE: test
              MYSQL_USER: ${{ secrets.mysql_user }}
              MYSQL_PASSWORD: ${{ secrets.mysql_password }}
            ports:
              - 3306:3306
            options: >-
              --health-cmd="mysqladmin ping --silent"
              --health-interval=10s
              --health-timeout=5s
              --health-retries=3
        needs: 
          - build
          - lint
        steps:
            - name: Repository Checkout
              uses: actions/checkout@v4
            
            - name: Set up Node.js
              id: node-setup
              uses: ./github/actions/node-setup-action
              with:
                  node-version: '22'
            - name: Prisma Generate
              run: npx prisma generate

            - name: Run Migrations
              run: npm run db:migrate

            - name: Run Tests
              run: npm test

            - name: Run Test Coverage
              run: npm run test:cov

            - name: Upload Test Coverage
              uses: actions/upload-artifact@v4
              with:
                  name: report-test-coverage
                  path: ./coverage